---
import '../styles/global.css';

interface Props {
  title: string;
  description?: string;
  lang?: string;
}

const { 
  title, 
  description = "Noah Cantor's Portfolio - Process Optimizer, Recruiter Hacker, Bilingual Problem-Solver",
  lang = "en"
} = Astro.props;
---

<!DOCTYPE html>
<html lang={lang}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content={description} />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Roboto+Mono&display=swap" rel="stylesheet" />
    <title>{title}</title>
    <script is:inline>
      // On page load or when changing themes, set the correct theme
      const theme = (() => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
          return localStorage.getItem('theme');
        }
        return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
      })();
      
      if (theme === 'dark') {
        document.documentElement.classList.add('dark');
      } else {
        document.documentElement.classList.remove('dark');
      }
      
      window.localStorage.setItem('theme', theme);
    </script>
  </head>
  <body>
    <header class="fixed w-full top-0 z-50 bg-light-background dark:bg-dark-background border-b border-gray-200 dark:border-gray-800">
      <div class="container mx-auto px-4 py-3 flex justify-between items-center">
        <a href="/" class="text-2xl font-bold gradient-text">N<span class="hidden sm:inline">oah</span></a>
        <nav>
          <ul class="flex space-x-4 md:space-x-8">
            <li><a href="/" class="hover:text-primary transition-colors">Home</a></li>
            <li><a href="/projects" class="hover:text-primary transition-colors">Projects</a></li>
            <li><a href="/timeline" class="hover:text-primary transition-colors">Timeline</a></li>
            <li><a href="/blog" class="hover:text-primary transition-colors">Blog</a></li>
            <li class="flex items-center">
              <button id="theme-toggle" class="p-1 rounded-full hover:bg-gray-200 dark:hover:bg-gray-700 transition-colors">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 hidden dark:block" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" />
                </svg>
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 block dark:hidden" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
                </svg>
              </button>
            </li>
            <li class="flex items-center">
              <button id="language-toggle" class="hover:text-primary transition-colors">
                <span class="lang-en">ES</span>
                <span class="lang-es hidden">EN</span>
              </button>
            </li>
          </ul>
        </nav>
      </div>
    </header>
    
    <main class="pt-16 min-h-screen">
      <slot />
    </main>
    
    <footer class="bg-light-background dark:bg-dark-background border-t border-gray-200 dark:border-gray-800 py-6">
      <div class="container mx-auto px-4">
        <div class="flex flex-col md:flex-row justify-between items-center">
          <div class="mb-4 md:mb-0">
            <p>&copy; {new Date().getFullYear()} Noah Cantor</p>
          </div>
          <div class="flex space-x-4">
            <a href="https://github.com/NoahTheGinger" class="hover:text-primary transition-colors" target="_blank" rel="noopener noreferrer">
              <span class="sr-only">GitHub</span>
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="currentColor" viewBox="0 0 24 24">
                <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
              </svg>
            </a>
            <a href="https://linkedin.com/in/ncantor4" class="hover:text-primary transition-colors" target="_blank" rel="noopener noreferrer">
              <span class="sr-only">LinkedIn</span>
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="currentColor" viewBox="0 0 24 24">
                <path d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z"/>
              </svg>
            </a>
            <a href="mailto:noahcantor998@gmail.com" class="hover:text-primary transition-colors">
              <span class="sr-only">Email</span>
              <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
              </svg>
            </a>
          </div>
        </div>
      </div>
    </footer>
    
    <script>
      // Theme toggler
      document.getElementById('theme-toggle')?.addEventListener('click', () => {
        const htmlElement = document.documentElement;
        const currentTheme = htmlElement.classList.contains('dark') ? 'dark' : 'light';
        const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
        
        htmlElement.classList.toggle('dark');
        localStorage.setItem('theme', newTheme);
      });
      
      // Language toggle
      document.getElementById('language-toggle')?.addEventListener('click', () => {
        const currentLang = document.documentElement.lang;
        const newLang = currentLang === 'en' ? 'es' : 'en';
        
        document.documentElement.lang = newLang;
        document.querySelectorAll('.lang-en').forEach(el => el.classList.toggle('hidden'));
        document.querySelectorAll('.lang-es').forEach(el => el.classList.toggle('hidden'));
        
        localStorage.setItem('language', newLang);
        
        // Dispatch a custom event to notify language change
        window.dispatchEvent(new CustomEvent('languageChange', { detail: { language: newLang } }));
      });
      
      // Initialize language from localStorage if available
      document.addEventListener('DOMContentLoaded', () => {
        const savedLang = localStorage.getItem('language');
        if (savedLang && savedLang !== document.documentElement.lang) {
          document.getElementById('language-toggle')?.click();
        }
      });
      
      // Konami Code Easter Egg
      const konamiCode = ['ArrowUp', 'ArrowUp', 'ArrowDown', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'ArrowLeft', 'ArrowRight', 'b', 'a'];
      let konamiIndex = 0;
      
      document.addEventListener('keydown', (e) => {
        if (e.key === konamiCode[konamiIndex]) {
          konamiIndex++;
          if (konamiIndex === konamiCode.length) {
            // Reset the index
            konamiIndex = 0;
            // Load the Promptimizer demo in a modal
            loadPromptimizer();
          }
        } else {
          konamiIndex = 0;
        }
      });
      
      function loadPromptimizer() {
        // Create modal overlay
        const modal = document.createElement('div');
        modal.classList.add('fixed', 'inset-0', 'bg-black', 'bg-opacity-75', 'flex', 'items-center', 'justify-center', 'z-50');
        modal.id = 'promptimizer-modal';
        
        // Create modal content
        const modalContent = document.createElement('div');
        modalContent.classList.add('bg-white', 'dark:bg-gray-800', 'p-6', 'rounded-lg', 'w-11/12', 'max-w-4xl', 'max-h-[90vh]', 'overflow-y-auto');
        
        // Add close button
        const closeButton = document.createElement('button');
        closeButton.innerText = 'Close';
        closeButton.classList.add('primary-btn', 'mt-4');
        closeButton.addEventListener('click', () => modal.remove());
        
        // Load the promptimizer demo
        const script = document.createElement('script');
        script.src = '/playground/promptimizer-demo.js';
        script.onload = () => {
          // Create a container for the demo
          const container = document.createElement('div');
          container.id = 'promptimizer-container';
          container.classList.add('my-4');
          
          // Add everything to the modal
          modalContent.innerHTML = '<h2 class="text-2xl font-bold mb-4">Promptimizer Demo</h2>';
          modalContent.appendChild(container);
          modalContent.appendChild(closeButton);
          
          // Initialize the demo if a global function was exported
          if (typeof window.initPromptimizer === 'function') {
            window.initPromptimizer(container);
          } else {
            container.innerHTML = '<p>Promptimizer demo could not be loaded</p>';
          }
        };
        
        script.onerror = () => {
          modalContent.innerHTML += '<p class="text-red-500">Failed to load Promptimizer demo</p>';
          modalContent.appendChild(closeButton);
        };
        
        // Add modal to page
        modal.appendChild(modalContent);
        document.body.appendChild(modal);
        document.head.appendChild(script);
        
        // Close on escape key
        modal.addEventListener('keydown', (e) => {
          if (e.key === 'Escape') closeButton.click();
        });
      }
    </script>
  </body>
</html>
